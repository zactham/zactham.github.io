{"ast":null,"code":"var _jsxFileName = \"/Users/zac/zactham.github.io/src/components/ImageSlider/ImageSlider.js\";\nimport React, { useState, useEffect } from 'react';\nimport './ImageSlider.css';\nconst ImageSlider = _ref => {\n  let {\n    slides,\n    imageScale = 100\n  } = _ref;\n  const [current, setCurrent] = useState(0);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768); // detect mobile on initial load\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    window.addEventListener('resize', handleResize); // listen for window resize\n\n    return () => {\n      window.removeEventListener('resize', handleResize); // clean up listener on component unmount\n    };\n  }, []);\n  const handlePrev = () => {\n    setCurrent(prev => prev <= 0 ? slides.length - 1 : prev - 1);\n  };\n  const handleNext = () => {\n    setCurrent(prev => prev >= slides.length - 1 ? 0 : prev + 1);\n  };\n  const effectiveImageScale = isMobile ? 93 : imageScale; // set scale to 100% on mobile\n\n  const imageSizeStyle = {\n    width: `${effectiveImageScale}%`,\n    height: 'auto'\n  };\n  const sliderSizeStyle = {\n    maxWidth: `${effectiveImageScale}%`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    style: sliderSizeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"slider-btn slider-btn-prev\",\n    onClick: handlePrev,\n    style: {\n      visibility: slides.length > 1 && !isMobile ? 'visible' : 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"<\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: slides[current].url,\n    alt: `Slide ${current}: ${slides[current].title}`,\n    className: \"slider-img\",\n    style: imageSizeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"slider-btn slider-btn-next\",\n    onClick: handleNext,\n    style: {\n      visibility: slides.length > 1 && !isMobile ? 'visible' : 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \">\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, slides.map((_, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    className: `slider-dot ${index === current ? 'active' : ''}`,\n    onClick: () => setCurrent(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default ImageSlider;","map":{"version":3,"names":["React","useState","useEffect","ImageSlider","slides","imageScale","current","setCurrent","isMobile","setIsMobile","window","innerWidth","handleResize","addEventListener","removeEventListener","handlePrev","prev","length","handleNext","effectiveImageScale","imageSizeStyle","width","height","sliderSizeStyle","maxWidth","visibility","url","title","map","_","index"],"sources":["/Users/zac/zactham.github.io/src/components/ImageSlider/ImageSlider.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ImageSlider.css';\n\nconst ImageSlider = ({ slides, imageScale = 100 }) => {\n  const [current, setCurrent] = useState(0);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768); // detect mobile on initial load\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    window.addEventListener('resize', handleResize); // listen for window resize\n\n    return () => {\n      window.removeEventListener('resize', handleResize); // clean up listener on component unmount\n    };\n  }, []);\n\n  const handlePrev = () => {\n    setCurrent(prev => (prev <= 0 ? slides.length - 1 : prev - 1));\n  };\n\n  const handleNext = () => {\n    setCurrent(prev => (prev >= slides.length - 1 ? 0 : prev + 1));\n  };\n\n  const effectiveImageScale = isMobile ? 93 : imageScale; // set scale to 100% on mobile\n\n  const imageSizeStyle = {\n    width: `${effectiveImageScale}%`,\n    height: 'auto'\n  };\n\n  const sliderSizeStyle = {\n    maxWidth: `${effectiveImageScale}%`\n  };\n\n  return (\n    <div className=\"slider\" style={sliderSizeStyle}>\n      <div className=\"slider-content\">\n        <button \n          className=\"slider-btn slider-btn-prev\" \n          onClick={handlePrev} \n          style={{ visibility: slides.length > 1 && !isMobile ? 'visible' : 'hidden' }}\n        >\n          &lt;\n        </button>\n        <img \n          src={slides[current].url} \n          alt={`Slide ${current}: ${slides[current].title}`} \n          className=\"slider-img\" \n          style={imageSizeStyle}\n        />\n        <button \n          className=\"slider-btn slider-btn-next\" \n          onClick={handleNext} \n          style={{ visibility: slides.length > 1 && !isMobile ? 'visible' : 'hidden' }}\n        >\n          &gt;\n        </button>\n      </div>\n      <div className=\"slider-pagination\">\n        {slides.map((_, index) => (\n          <span \n            key={index}\n            className={`slider-dot ${index === current ? 'active' : ''}`}\n            onClick={() => setCurrent(index)}\n          ></span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageSlider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}