{"ast":null,"code":"import _classCallCheck from \"/Users/zac/zactham.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zac/zactham.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/zac/zactham.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n/*\n Copyright (C) Federico Zivolo 2020\n Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).\n */\nvar e = 'undefined' != typeof window && 'undefined' != typeof document && 'undefined' != typeof navigator;\nvar t = function () {\n  var t = ['Edge', 'Trident', 'Firefox'];\n  for (var _o = 0; _o < t.length; _o += 1) {\n    if (e && 0 <= navigator.userAgent.indexOf(t[_o])) return 1;\n  }\n  return 0;\n}();\nfunction o(e) {\n  var t = !1;\n  return function () {\n    t || (t = !0, window.Promise.resolve().then(function () {\n      t = !1, e();\n    }));\n  };\n}\nfunction n(e) {\n  var o = !1;\n  return function () {\n    o || (o = !0, setTimeout(function () {\n      o = !1, e();\n    }, t));\n  };\n}\nvar i = e && window.Promise;\nvar r = i ? o : n;\nfunction p(e) {\n  return e && '[object Function]' === {}.toString.call(e);\n}\nfunction d(e, t) {\n  if (1 !== e.nodeType) return [];\n  var o = e.ownerDocument.defaultView,\n    n = o.getComputedStyle(e, null);\n  return t ? n[t] : n;\n}\nfunction s(e) {\n  return 'HTML' === e.nodeName ? e : e.parentNode || e.host;\n}\nfunction f(e) {\n  if (!e) return document.body;\n  switch (e.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return e.ownerDocument.body;\n    case '#document':\n      return e.body;\n  }\n  var _d = d(e),\n    t = _d.overflow,\n    o = _d.overflowX,\n    n = _d.overflowY;\n  return /(auto|scroll|overlay)/.test(t + n + o) ? e : f(s(e));\n}\nfunction a(e) {\n  return e && e.referenceNode ? e.referenceNode : e;\n}\nvar l = e && !!(window.MSInputMethodContext && document.documentMode),\n  m = e && /MSIE 10/.test(navigator.userAgent);\nfunction h(e) {\n  return 11 === e ? l : 10 === e ? m : l || m;\n}\nfunction c(e) {\n  if (!e) return document.documentElement;\n  var t = h(10) ? document.body : null;\n  var o = e.offsetParent || null;\n  for (; o === t && e.nextElementSibling;) {\n    o = (e = e.nextElementSibling).offsetParent;\n  }\n  var n = o && o.nodeName;\n  return n && 'BODY' !== n && 'HTML' !== n ? -1 !== ['TH', 'TD', 'TABLE'].indexOf(o.nodeName) && 'static' === d(o, 'position') ? c(o) : o : e ? e.ownerDocument.documentElement : document.documentElement;\n}\nfunction u(e) {\n  var t = e.nodeName;\n  return 'BODY' !== t && ('HTML' === t || c(e.firstElementChild) === e);\n}\nfunction g(e) {\n  return null === e.parentNode ? e : g(e.parentNode);\n}\nfunction b(e, t) {\n  if (!e || !e.nodeType || !t || !t.nodeType) return document.documentElement;\n  var o = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING,\n    n = o ? e : t,\n    i = o ? t : e,\n    r = document.createRange();\n  r.setStart(n, 0), r.setEnd(i, 0);\n  var p = r.commonAncestorContainer;\n  if (e !== p && t !== p || n.contains(i)) return u(p) ? p : c(p);\n  var d = g(e);\n  return d.host ? b(d.host, t) : b(e, g(t).host);\n}\nfunction w(e) {\n  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n  var o = 'top' === t ? 'scrollTop' : 'scrollLeft',\n    n = e.nodeName;\n  if ('BODY' === n || 'HTML' === n) {\n    var _t = e.ownerDocument.documentElement,\n      _n = e.ownerDocument.scrollingElement || _t;\n    return _n[o];\n  }\n  return e[o];\n}\nfunction y(e, t) {\n  var o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n  var n = w(t, 'top'),\n    i = w(t, 'left'),\n    r = o ? -1 : 1;\n  return e.top += n * r, e.bottom += n * r, e.left += i * r, e.right += i * r, e;\n}\nfunction E(e, t) {\n  var o = 'x' === t ? 'Left' : 'Top',\n    n = 'Left' == o ? 'Right' : 'Bottom';\n  return parseFloat(e[\"border\".concat(o, \"Width\")]) + parseFloat(e[\"border\".concat(n, \"Width\")]);\n}\nfunction x(e, t, o, n) {\n  return Math.max(t[\"offset\".concat(e)], t[\"scroll\".concat(e)], o[\"client\".concat(e)], o[\"offset\".concat(e)], o[\"scroll\".concat(e)], h(10) ? parseInt(o[\"offset\".concat(e)]) + parseInt(n[\"margin\".concat('Height' === e ? 'Top' : 'Left')]) + parseInt(n[\"margin\".concat('Height' === e ? 'Bottom' : 'Right')]) : 0);\n}\nfunction v(e) {\n  var t = e.body,\n    o = e.documentElement,\n    n = h(10) && getComputedStyle(o);\n  return {\n    height: x('Height', t, o, n),\n    width: x('Width', t, o, n)\n  };\n}\nvar O = Object.assign || function (e) {\n  for (var t, o = 1; o < arguments.length; o++) {\n    for (var n in t = arguments[o], t) {\n      Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n    }\n  }\n  return e;\n};\nfunction L(e) {\n  return O({}, e, {\n    right: e.left + e.width,\n    bottom: e.top + e.height\n  });\n}\nfunction S(e) {\n  var t = {};\n  try {\n    if (h(10)) {\n      t = e.getBoundingClientRect();\n      var _o2 = w(e, 'top'),\n        _n2 = w(e, 'left');\n      t.top += _o2, t.left += _n2, t.bottom += _o2, t.right += _n2;\n    } else t = e.getBoundingClientRect();\n  } catch (t) {}\n  var o = {\n      left: t.left,\n      top: t.top,\n      width: t.right - t.left,\n      height: t.bottom - t.top\n    },\n    n = 'HTML' === e.nodeName ? v(e.ownerDocument) : {},\n    i = n.width || e.clientWidth || o.width,\n    r = n.height || e.clientHeight || o.height;\n  var p = e.offsetWidth - i,\n    s = e.offsetHeight - r;\n  if (p || s) {\n    var _t2 = d(e);\n    p -= E(_t2, 'x'), s -= E(_t2, 'y'), o.width -= p, o.height -= s;\n  }\n  return L(o);\n}\nfunction T(e, t) {\n  var o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n  var n = Math.max;\n  var i = h(10),\n    r = 'HTML' === t.nodeName,\n    p = S(e),\n    s = S(t),\n    a = f(e),\n    l = d(t),\n    m = parseFloat(l.borderTopWidth),\n    c = parseFloat(l.borderLeftWidth);\n  o && r && (s.top = n(s.top, 0), s.left = n(s.left, 0));\n  var u = L({\n    top: p.top - s.top - m,\n    left: p.left - s.left - c,\n    width: p.width,\n    height: p.height\n  });\n  if (u.marginTop = 0, u.marginLeft = 0, !i && r) {\n    var _e = parseFloat(l.marginTop),\n      _t3 = parseFloat(l.marginLeft);\n    u.top -= m - _e, u.bottom -= m - _e, u.left -= c - _t3, u.right -= c - _t3, u.marginTop = _e, u.marginLeft = _t3;\n  }\n  return (i && !o ? t.contains(a) : t === a && 'BODY' !== a.nodeName) && (u = y(u, t)), u;\n}\nfunction D(e) {\n  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n  var o = Math.max;\n  var n = e.ownerDocument.documentElement,\n    i = T(e, n),\n    r = o(n.clientWidth, window.innerWidth || 0),\n    p = o(n.clientHeight, window.innerHeight || 0),\n    d = t ? 0 : w(n),\n    s = t ? 0 : w(n, 'left'),\n    f = {\n      top: d - i.top + i.marginTop,\n      left: s - i.left + i.marginLeft,\n      width: r,\n      height: p\n    };\n  return L(f);\n}\nfunction C(e) {\n  var t = e.nodeName;\n  if ('BODY' === t || 'HTML' === t) return !1;\n  if ('fixed' === d(e, 'position')) return !0;\n  var o = s(e);\n  return !!o && C(o);\n}\nfunction N(e) {\n  if (!e || !e.parentElement || h()) return document.documentElement;\n  var t = e.parentElement;\n  for (; t && 'none' === d(t, 'transform');) {\n    t = t.parentElement;\n  }\n  return t || document.documentElement;\n}\nfunction P(e, t, o, n) {\n  var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !1;\n  var r = {\n    top: 0,\n    left: 0\n  };\n  var p = i ? N(e) : b(e, a(t));\n  if ('viewport' === n) r = D(p, i);else {\n    var _o3;\n    'scrollParent' === n ? (_o3 = f(s(t)), 'BODY' === _o3.nodeName && (_o3 = e.ownerDocument.documentElement)) : 'window' === n ? _o3 = e.ownerDocument.documentElement : _o3 = n;\n    var _d2 = T(_o3, p, i);\n    if ('HTML' === _o3.nodeName && !C(p)) {\n      var _v = v(e.ownerDocument),\n        _t4 = _v.height,\n        _o4 = _v.width;\n      r.top += _d2.top - _d2.marginTop, r.bottom = _t4 + _d2.top, r.left += _d2.left - _d2.marginLeft, r.right = _o4 + _d2.left;\n    } else r = _d2;\n  }\n  o = o || 0;\n  var d = 'number' == typeof o;\n  return r.left += d ? o : o.left || 0, r.top += d ? o : o.top || 0, r.right -= d ? o : o.right || 0, r.bottom -= d ? o : o.bottom || 0, r;\n}\nfunction B(_ref) {\n  var e = _ref.width,\n    t = _ref.height;\n  return e * t;\n}\nfunction H(e, t, o, n, i) {\n  var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  if (-1 === e.indexOf('auto')) return e;\n  var p = P(o, n, r, i),\n    d = {\n      top: {\n        width: p.width,\n        height: t.top - p.top\n      },\n      right: {\n        width: p.right - t.right,\n        height: p.height\n      },\n      bottom: {\n        width: p.width,\n        height: p.bottom - t.bottom\n      },\n      left: {\n        width: t.left - p.left,\n        height: p.height\n      }\n    },\n    s = Object.keys(d).map(function (e) {\n      return O({\n        key: e\n      }, d[e], {\n        area: B(d[e])\n      });\n    }).sort(function (e, t) {\n      return t.area - e.area;\n    }),\n    f = s.filter(function (_ref2) {\n      var e = _ref2.width,\n        t = _ref2.height;\n      return e >= o.clientWidth && t >= o.clientHeight;\n    }),\n    a = 0 < f.length ? f[0].key : s[0].key,\n    l = e.split('-')[1];\n  return a + (l ? \"-\".concat(l) : '');\n}\nfunction W(e, t, o) {\n  var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var i = n ? N(t) : b(t, a(o));\n  return T(o, i, n);\n}\nfunction k(e) {\n  var t = e.ownerDocument.defaultView,\n    o = t.getComputedStyle(e),\n    n = parseFloat(o.marginTop || 0) + parseFloat(o.marginBottom || 0),\n    i = parseFloat(o.marginLeft || 0) + parseFloat(o.marginRight || 0),\n    r = {\n      width: e.offsetWidth + i,\n      height: e.offsetHeight + n\n    };\n  return r;\n}\nfunction A(e) {\n  var t = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return e.replace(/left|right|bottom|top/g, function (e) {\n    return t[e];\n  });\n}\nfunction M(e, t, o) {\n  o = o.split('-')[0];\n  var n = k(e),\n    i = {\n      width: n.width,\n      height: n.height\n    },\n    r = -1 !== ['right', 'left'].indexOf(o),\n    p = r ? 'top' : 'left',\n    d = r ? 'left' : 'top',\n    s = r ? 'height' : 'width',\n    f = r ? 'width' : 'height';\n  return i[p] = t[p] + t[s] / 2 - n[s] / 2, i[d] = o === d ? t[d] - n[f] : t[A(d)], i;\n}\nfunction F(e, t) {\n  return Array.prototype.find ? e.find(t) : e.filter(t)[0];\n}\nfunction I(e, t, o) {\n  if (Array.prototype.findIndex) return e.findIndex(function (e) {\n    return e[t] === o;\n  });\n  var n = F(e, function (e) {\n    return e[t] === o;\n  });\n  return e.indexOf(n);\n}\nfunction R(e, t, o) {\n  var n = void 0 === o ? e : e.slice(0, I(e, 'name', o));\n  return n.forEach(function (e) {\n    e['function'] && console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    var o = e['function'] || e.fn;\n    e.enabled && p(o) && (t.offsets.popper = L(t.offsets.popper), t.offsets.reference = L(t.offsets.reference), t = o(t, e));\n  }), t;\n}\nfunction U() {\n  if (this.state.isDestroyed) return;\n  var e = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: !1,\n    offsets: {}\n  };\n  e.offsets.reference = W(this.state, this.popper, this.reference, this.options.positionFixed), e.placement = H(this.options.placement, e.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), e.originalPlacement = e.placement, e.positionFixed = this.options.positionFixed, e.offsets.popper = M(this.popper, e.offsets.reference, e.placement), e.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute', e = R(this.modifiers, e), this.state.isCreated ? this.options.onUpdate(e) : (this.state.isCreated = !0, this.options.onCreate(e));\n}\nfunction Y(e, t) {\n  return e.some(function (_ref3) {\n    var e = _ref3.name,\n      o = _ref3.enabled;\n    return o && e === t;\n  });\n}\nfunction V(e) {\n  var t = [!1, 'ms', 'Webkit', 'Moz', 'O'],\n    o = e.charAt(0).toUpperCase() + e.slice(1);\n  for (var _n3 = 0; _n3 < t.length; _n3++) {\n    var _i = t[_n3],\n      _r = _i ? \"\".concat(_i).concat(o) : e;\n    if ('undefined' != typeof document.body.style[_r]) return _r;\n  }\n  return null;\n}\nfunction j() {\n  return this.state.isDestroyed = !0, Y(this.modifiers, 'applyStyle') && (this.popper.removeAttribute('x-placement'), this.popper.style.position = '', this.popper.style.top = '', this.popper.style.left = '', this.popper.style.right = '', this.popper.style.bottom = '', this.popper.style.willChange = '', this.popper.style[V('transform')] = ''), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this;\n}\nfunction K(e) {\n  var t = e.ownerDocument;\n  return t ? t.defaultView : window;\n}\nfunction q(e, t, o, n) {\n  var i = 'BODY' === e.nodeName,\n    r = i ? e.ownerDocument.defaultView : e;\n  r.addEventListener(t, o, {\n    passive: !0\n  }), i || q(f(r.parentNode), t, o, n), n.push(r);\n}\nfunction z(e, t, o, n) {\n  o.updateBound = n, K(e).addEventListener('resize', o.updateBound, {\n    passive: !0\n  });\n  var i = f(e);\n  return q(i, 'scroll', o.updateBound, o.scrollParents), o.scrollElement = i, o.eventsEnabled = !0, o;\n}\nfunction G() {\n  this.state.eventsEnabled || (this.state = z(this.reference, this.options, this.state, this.scheduleUpdate));\n}\nfunction _(e, t) {\n  return K(e).removeEventListener('resize', t.updateBound), t.scrollParents.forEach(function (e) {\n    e.removeEventListener('scroll', t.updateBound);\n  }), t.updateBound = null, t.scrollParents = [], t.scrollElement = null, t.eventsEnabled = !1, t;\n}\nfunction X() {\n  this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = _(this.reference, this.state));\n}\nfunction J(e) {\n  return '' !== e && !isNaN(parseFloat(e)) && isFinite(e);\n}\nfunction Q(e, t) {\n  Object.keys(t).forEach(function (o) {\n    var n = '';\n    -1 !== ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(o) && J(t[o]) && (n = 'px'), e.style[o] = t[o] + n;\n  });\n}\nfunction Z(e, t) {\n  Object.keys(t).forEach(function (o) {\n    var n = t[o];\n    !1 === n ? e.removeAttribute(o) : e.setAttribute(o, t[o]);\n  });\n}\nfunction $(e) {\n  return Q(e.instance.popper, e.styles), Z(e.instance.popper, e.attributes), e.arrowElement && Object.keys(e.arrowStyles).length && Q(e.arrowElement, e.arrowStyles), e;\n}\nfunction ee(e, t, o, n, i) {\n  var r = W(i, t, e, o.positionFixed),\n    p = H(o.placement, r, t, e, o.modifiers.flip.boundariesElement, o.modifiers.flip.padding);\n  return t.setAttribute('x-placement', p), Q(t, {\n    position: o.positionFixed ? 'fixed' : 'absolute'\n  }), o;\n}\nfunction te(e, t) {\n  var _e$offsets = e.offsets,\n    o = _e$offsets.popper,\n    n = _e$offsets.reference,\n    i = Math.round,\n    r = Math.floor,\n    p = function p(e) {\n      return e;\n    },\n    d = i(n.width),\n    s = i(o.width),\n    f = -1 !== ['left', 'right'].indexOf(e.placement),\n    a = -1 !== e.placement.indexOf('-'),\n    l = t ? f || a || d % 2 == s % 2 ? i : r : p,\n    m = t ? i : p;\n  return {\n    left: l(1 == d % 2 && 1 == s % 2 && !a && t ? o.left - 1 : o.left),\n    top: m(o.top),\n    bottom: m(o.bottom),\n    right: l(o.right)\n  };\n}\nvar oe = e && /Firefox/i.test(navigator.userAgent);\nfunction ne(e, t) {\n  var o = t.x,\n    n = t.y,\n    i = e.offsets.popper,\n    r = F(e.instance.modifiers, function (e) {\n      return 'applyStyle' === e.name;\n    }).gpuAcceleration;\n  void 0 !== r && console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  var p = void 0 === r ? t.gpuAcceleration : r,\n    d = c(e.instance.popper),\n    s = S(d),\n    f = {\n      position: i.position\n    },\n    a = te(e, 2 > window.devicePixelRatio || !oe),\n    l = 'bottom' === o ? 'top' : 'bottom',\n    m = 'right' === n ? 'left' : 'right',\n    h = V('transform');\n  var u, g;\n  if (g = 'bottom' == l ? 'HTML' === d.nodeName ? -d.clientHeight + a.bottom : -s.height + a.bottom : a.top, u = 'right' == m ? 'HTML' === d.nodeName ? -d.clientWidth + a.right : -s.width + a.right : a.left, p && h) f[h] = \"translate3d(\".concat(u, \"px, \").concat(g, \"px, 0)\"), f[l] = 0, f[m] = 0, f.willChange = 'transform';else {\n    var _e2 = 'bottom' == l ? -1 : 1,\n      _t5 = 'right' == m ? -1 : 1;\n    f[l] = g * _e2, f[m] = u * _t5, f.willChange = \"\".concat(l, \", \").concat(m);\n  }\n  var b = {\n    \"x-placement\": e.placement\n  };\n  return e.attributes = O({}, b, e.attributes), e.styles = O({}, f, e.styles), e.arrowStyles = O({}, e.offsets.arrow, e.arrowStyles), e;\n}\nfunction ie(e, t, o) {\n  var n = F(e, function (_ref4) {\n      var e = _ref4.name;\n      return e === t;\n    }),\n    i = !!n && e.some(function (e) {\n      return e.name === o && e.enabled && e.order < n.order;\n    });\n  if (!i) {\n    var _e3 = \"`\".concat(t, \"`\"),\n      _n4 = \"`\".concat(o, \"`\");\n    console.warn(\"\".concat(_n4, \" modifier is required by \").concat(_e3, \" modifier in order to work, be sure to include it before \").concat(_e3, \"!\"));\n  }\n  return i;\n}\nfunction re(e, t) {\n  var _e$offsets$arrow;\n  if (!ie(e.instance.modifiers, 'arrow', 'keepTogether')) return e;\n  var o = t.element;\n  if ('string' == typeof o) {\n    if (o = e.instance.popper.querySelector(o), !o) return e;\n  } else if (!e.instance.popper.contains(o)) return console.warn('WARNING: `arrow.element` must be child of its popper element!'), e;\n  var n = e.placement.split('-')[0],\n    _e$offsets2 = e.offsets,\n    i = _e$offsets2.popper,\n    r = _e$offsets2.reference,\n    p = -1 !== ['left', 'right'].indexOf(n),\n    s = p ? 'height' : 'width',\n    f = p ? 'Top' : 'Left',\n    a = f.toLowerCase(),\n    l = p ? 'left' : 'top',\n    m = p ? 'bottom' : 'right',\n    h = k(o)[s];\n  r[m] - h < i[a] && (e.offsets.popper[a] -= i[a] - (r[m] - h)), r[a] + h > i[m] && (e.offsets.popper[a] += r[a] + h - i[m]), e.offsets.popper = L(e.offsets.popper);\n  var c = r[a] + r[s] / 2 - h / 2,\n    u = d(e.instance.popper),\n    g = parseFloat(u[\"margin\".concat(f)]),\n    b = parseFloat(u[\"border\".concat(f, \"Width\")]);\n  var w = c - e.offsets.popper[a] - g - b;\n  return w = Math.max(Math.min(i[s] - h, w), 0), e.arrowElement = o, e.offsets.arrow = (_e$offsets$arrow = {}, _defineProperty(_e$offsets$arrow, a, Math.round(w)), _defineProperty(_e$offsets$arrow, l, ''), _e$offsets$arrow), e;\n}\nfunction pe(e) {\n  if ('end' === e) return 'start';\n  return 'start' === e ? 'end' : e;\n}\nvar de = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\nvar se = de.slice(3);\nfunction fe(e) {\n  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n  var o = se.indexOf(e),\n    n = se.slice(o + 1).concat(se.slice(0, o));\n  return t ? n.reverse() : n;\n}\nvar ae = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\nfunction le(e, t) {\n  if (Y(e.instance.modifiers, 'inner')) return e;\n  if (e.flipped && e.placement === e.originalPlacement) return e;\n  var o = P(e.instance.popper, e.instance.reference, t.padding, t.boundariesElement, e.positionFixed);\n  var n = e.placement.split('-')[0],\n    i = A(n),\n    r = e.placement.split('-')[1] || '',\n    p = [];\n  switch (t.behavior) {\n    case ae.FLIP:\n      p = [n, i];\n      break;\n    case ae.CLOCKWISE:\n      p = fe(n);\n      break;\n    case ae.COUNTERCLOCKWISE:\n      p = fe(n, !0);\n      break;\n    default:\n      p = t.behavior;\n  }\n  return p.forEach(function (d, s) {\n    if (n !== d || p.length === s + 1) return e;\n    n = e.placement.split('-')[0], i = A(n);\n    var f = e.offsets.popper,\n      a = e.offsets.reference,\n      l = Math.floor,\n      m = 'left' === n && l(f.right) > l(a.left) || 'right' === n && l(f.left) < l(a.right) || 'top' === n && l(f.bottom) > l(a.top) || 'bottom' === n && l(f.top) < l(a.bottom),\n      h = l(f.left) < l(o.left),\n      c = l(f.right) > l(o.right),\n      u = l(f.top) < l(o.top),\n      g = l(f.bottom) > l(o.bottom),\n      b = 'left' === n && h || 'right' === n && c || 'top' === n && u || 'bottom' === n && g,\n      w = -1 !== ['top', 'bottom'].indexOf(n),\n      y = !!t.flipVariations && (w && 'start' === r && h || w && 'end' === r && c || !w && 'start' === r && u || !w && 'end' === r && g),\n      E = !!t.flipVariationsByContent && (w && 'start' === r && c || w && 'end' === r && h || !w && 'start' === r && g || !w && 'end' === r && u),\n      x = y || E;\n    (m || b || x) && (e.flipped = !0, (m || b) && (n = p[s + 1]), x && (r = pe(r)), e.placement = n + (r ? '-' + r : ''), e.offsets.popper = O({}, e.offsets.popper, M(e.instance.popper, e.offsets.reference, e.placement)), e = R(e.instance.modifiers, e, 'flip'));\n  }), e;\n}\nfunction me(e) {\n  var _e$offsets3 = e.offsets,\n    t = _e$offsets3.popper,\n    o = _e$offsets3.reference,\n    n = e.placement.split('-')[0],\n    i = Math.floor,\n    r = -1 !== ['top', 'bottom'].indexOf(n),\n    p = r ? 'right' : 'bottom',\n    d = r ? 'left' : 'top',\n    s = r ? 'width' : 'height';\n  return t[p] < i(o[d]) && (e.offsets.popper[d] = i(o[d]) - t[s]), t[d] > i(o[p]) && (e.offsets.popper[d] = i(o[p])), e;\n}\nfunction he(e, t, o, n) {\n  var i = Math.max;\n  var r = e.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/),\n    p = +r[1],\n    d = r[2];\n  if (!p) return e;\n  if (0 === d.indexOf('%')) {\n    var _e4;\n    switch (d) {\n      case '%p':\n        _e4 = o;\n        break;\n      case '%':\n      case '%r':\n      default:\n        _e4 = n;\n    }\n    var _i2 = L(_e4);\n    return _i2[t] / 100 * p;\n  }\n  if ('vh' === d || 'vw' === d) {\n    var _e5;\n    return _e5 = 'vh' === d ? i(document.documentElement.clientHeight, window.innerHeight || 0) : i(document.documentElement.clientWidth, window.innerWidth || 0), _e5 / 100 * p;\n  }\n  return p;\n}\nfunction ce(e, t, o, n) {\n  var i = [0, 0],\n    r = -1 !== ['right', 'left'].indexOf(n),\n    p = e.split(/(\\+|\\-)/).map(function (e) {\n      return e.trim();\n    }),\n    d = p.indexOf(F(p, function (e) {\n      return -1 !== e.search(/,|\\s/);\n    }));\n  p[d] && -1 === p[d].indexOf(',') && console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  var s = /\\s*,\\s*|\\s+/;\n  var f = -1 === d ? [p] : [p.slice(0, d).concat([p[d].split(s)[0]]), [p[d].split(s)[1]].concat(p.slice(d + 1))];\n  return f = f.map(function (e, n) {\n    var i = (1 === n ? !r : r) ? 'height' : 'width';\n    var p = !1;\n    return e.reduce(function (e, t) {\n      return '' === e[e.length - 1] && -1 !== ['+', '-'].indexOf(t) ? (e[e.length - 1] = t, p = !0, e) : p ? (e[e.length - 1] += t, p = !1, e) : e.concat(t);\n    }, []).map(function (e) {\n      return he(e, i, t, o);\n    });\n  }), f.forEach(function (e, t) {\n    e.forEach(function (o, n) {\n      J(o) && (i[t] += o * ('-' === e[n - 1] ? -1 : 1));\n    });\n  }), i;\n}\nfunction ue(e, _ref5) {\n  var t = _ref5.offset;\n  var o = e.placement,\n    _e$offsets4 = e.offsets,\n    n = _e$offsets4.popper,\n    i = _e$offsets4.reference,\n    r = o.split('-')[0];\n  var p;\n  return p = J(+t) ? [+t, 0] : ce(t, n, i, r), 'left' === r ? (n.top += p[0], n.left -= p[1]) : 'right' === r ? (n.top += p[0], n.left += p[1]) : 'top' === r ? (n.left += p[0], n.top -= p[1]) : 'bottom' === r && (n.left += p[0], n.top += p[1]), e.popper = n, e;\n}\nfunction ge(e, t) {\n  var o = t.boundariesElement || c(e.instance.popper);\n  e.instance.reference === o && (o = c(o));\n  var n = V('transform'),\n    i = e.instance.popper.style,\n    r = i.top,\n    p = i.left,\n    d = i[n];\n  i.top = '', i.left = '', i[n] = '';\n  var s = P(e.instance.popper, e.instance.reference, t.padding, o, e.positionFixed);\n  i.top = r, i.left = p, i[n] = d, t.boundaries = s;\n  var f = t.priority;\n  var a = e.offsets.popper;\n  var l = {\n    primary: function primary(e) {\n      var o = a[e];\n      return a[e] < s[e] && !t.escapeWithReference && (o = Math.max(a[e], s[e])), _defineProperty({}, e, o);\n    },\n    secondary: function secondary(e) {\n      var o = 'right' === e ? 'left' : 'top';\n      var n = a[o];\n      return a[e] > s[e] && !t.escapeWithReference && (n = Math.min(a[o], s[e] - ('right' === e ? a.width : a.height))), _defineProperty({}, o, n);\n    }\n  };\n  return f.forEach(function (e) {\n    var t = -1 === ['left', 'top'].indexOf(e) ? 'secondary' : 'primary';\n    a = O({}, a, l[t](e));\n  }), e.offsets.popper = a, e;\n}\nfunction be(e) {\n  var t = e.placement,\n    o = t.split('-')[0],\n    n = t.split('-')[1];\n  if (n) {\n    var _e$offsets5 = e.offsets,\n      _t6 = _e$offsets5.reference,\n      _i3 = _e$offsets5.popper,\n      _r2 = -1 !== ['bottom', 'top'].indexOf(o),\n      _p = _r2 ? 'left' : 'top',\n      _d3 = _r2 ? 'width' : 'height',\n      _s = {\n        start: _defineProperty({}, _p, _t6[_p]),\n        end: _defineProperty({}, _p, _t6[_p] + _t6[_d3] - _i3[_d3])\n      };\n    e.offsets.popper = O({}, _i3, _s[n]);\n  }\n  return e;\n}\nfunction we(e) {\n  if (!ie(e.instance.modifiers, 'hide', 'preventOverflow')) return e;\n  var t = e.offsets.reference,\n    o = F(e.instance.modifiers, function (e) {\n      return 'preventOverflow' === e.name;\n    }).boundaries;\n  if (t.bottom < o.top || t.left > o.right || t.top > o.bottom || t.right < o.left) {\n    if (!0 === e.hide) return e;\n    e.hide = !0, e.attributes['x-out-of-boundaries'] = '';\n  } else {\n    if (!1 === e.hide) return e;\n    e.hide = !1, e.attributes['x-out-of-boundaries'] = !1;\n  }\n  return e;\n}\nfunction ye(e) {\n  var t = e.placement,\n    o = t.split('-')[0],\n    _e$offsets6 = e.offsets,\n    n = _e$offsets6.popper,\n    i = _e$offsets6.reference,\n    r = -1 !== ['left', 'right'].indexOf(o),\n    p = -1 === ['top', 'left'].indexOf(o);\n  return n[r ? 'left' : 'top'] = i[o] - (p ? n[r ? 'width' : 'height'] : 0), e.placement = A(t), e.offsets.popper = L(n), e;\n}\nvar Ee = {\n    shift: {\n      order: 100,\n      enabled: !0,\n      fn: be\n    },\n    offset: {\n      order: 200,\n      enabled: !0,\n      fn: ue,\n      offset: 0\n    },\n    preventOverflow: {\n      order: 300,\n      enabled: !0,\n      fn: ge,\n      priority: ['left', 'right', 'top', 'bottom'],\n      padding: 5,\n      boundariesElement: 'scrollParent'\n    },\n    keepTogether: {\n      order: 400,\n      enabled: !0,\n      fn: me\n    },\n    arrow: {\n      order: 500,\n      enabled: !0,\n      fn: re,\n      element: '[x-arrow]'\n    },\n    flip: {\n      order: 600,\n      enabled: !0,\n      fn: le,\n      behavior: 'flip',\n      padding: 5,\n      boundariesElement: 'viewport',\n      flipVariations: !1,\n      flipVariationsByContent: !1\n    },\n    inner: {\n      order: 700,\n      enabled: !1,\n      fn: ye\n    },\n    hide: {\n      order: 800,\n      enabled: !0,\n      fn: we\n    },\n    computeStyle: {\n      order: 850,\n      enabled: !0,\n      fn: ne,\n      gpuAcceleration: !0,\n      x: 'bottom',\n      y: 'right'\n    },\n    applyStyle: {\n      order: 900,\n      enabled: !0,\n      fn: $,\n      onLoad: ee,\n      gpuAcceleration: void 0\n    }\n  },\n  xe = {\n    placement: 'bottom',\n    positionFixed: !1,\n    eventsEnabled: !0,\n    removeOnDestroy: !1,\n    onCreate: function onCreate() {},\n    onUpdate: function onUpdate() {},\n    modifiers: Ee\n  };\nvar ve = /*#__PURE__*/function () {\n  function ve(e, t) {\n    var _this = this;\n    var o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, ve);\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    }, this.update = r(this.update.bind(this)), this.options = O({}, ve.Defaults, o), this.state = {\n      isDestroyed: !1,\n      isCreated: !1,\n      scrollParents: []\n    }, this.reference = e && e.jquery ? e[0] : e, this.popper = t && t.jquery ? t[0] : t, this.options.modifiers = {}, Object.keys(O({}, ve.Defaults.modifiers, o.modifiers)).forEach(function (e) {\n      _this.options.modifiers[e] = O({}, ve.Defaults.modifiers[e] || {}, o.modifiers ? o.modifiers[e] : {});\n    }), this.modifiers = Object.keys(this.options.modifiers).map(function (e) {\n      return O({\n        name: e\n      }, _this.options.modifiers[e]);\n    }).sort(function (e, t) {\n      return e.order - t.order;\n    }), this.modifiers.forEach(function (e) {\n      e.enabled && p(e.onLoad) && e.onLoad(_this.reference, _this.popper, _this.options, e, _this.state);\n    }), this.update();\n    var n = this.options.eventsEnabled;\n    n && this.enableEventListeners(), this.state.eventsEnabled = n;\n  }\n  _createClass(ve, [{\n    key: \"update\",\n    value: function update() {\n      return U.call(this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      return j.call(this);\n    }\n  }, {\n    key: \"enableEventListeners\",\n    value: function enableEventListeners() {\n      return G.call(this);\n    }\n  }, {\n    key: \"disableEventListeners\",\n    value: function disableEventListeners() {\n      return X.call(this);\n    }\n  }]);\n  return ve;\n}();\nve.Utils = ('undefined' == typeof window ? global : window).PopperUtils, ve.placements = de, ve.Defaults = xe;\nexport default ve;","map":{"version":3,"mappings":"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","names":["window","document","navigator","longerTimeoutBrowsers","i","length","isBrowser","userAgent","indexOf","called","t","Promise","resolve","then","scheduled","o","supportsMicroTasks","functionToCheck","getType","toString","call","element","nodeType","ownerDocument","defaultView","css","getComputedStyle","property","nodeName","parentNode","host","body","getStyleComputedProperty","overflow","overflowX","overflowY","test","getScrollParent","getParentNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","version","documentElement","noOffsetParent","isIE","offsetParent","nextElementSibling","n","getOffsetParent","firstElementChild","node","getRoot","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","parseFloat","styles","Math","max","e","parseInt","computedStyle","height","getSize","width","Object","offsets","rect","getBoundingClientRect","result","sizes","getWindowSizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getBordersSize","getClientRect","fixedPosition","runIsIE","isHTML","parent","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","includeScroll","excludeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","innerWidth","innerHeight","offset","isFixed","parentElement","el","boundaries","getFixedPositionOffsetParent","getReferenceNode","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","popper","padding","isPaddingNumber","placement","getBoundaries","rects","refRect","sortedAreas","keys","map","key","getArea","sort","b","area","a","filteredAreas","filter","computedPlacement","variation","split","l","commonOffsetParent","x","marginBottom","y","marginRight","hash","replace","matched","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","r","referenceOffsets","getOppositePlacement","Array","prototype","find","arr","findIndex","cur","match","obj","modifiersToRun","ends","modifiers","slice","forEach","warn","fn","enabled","isFunction","data","state","isDestroyed","instance","arrowStyles","attributes","flipped","getReferenceOffsets","options","positionFixed","computeAutoPlacement","flip","originalPlacement","getPopperOffsets","position","runModifiers","isCreated","onUpdate","onCreate","some","name","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","isModifierEnabled","removeAttribute","willChange","getSupportedPropertyName","disableEventListeners","removeOnDestroy","removeChild","isBody","target","addEventListener","passive","push","updateBound","scrollElement","scrollParents","eventsEnabled","setupEventListeners","scheduleUpdate","removeEventListener","removeEventListeners","isNaN","isFinite","prop","unit","isNumeric","value","setAttribute","arrowElement","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","bothOddWidth","isFirefox","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","getRoundedOffsets","devicePixelRatio","prefixedProperty","u","invertTop","invertLeft","f","arrow","requesting","isRequired","requested","console","isModifierRequired","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","validPlacements","placements","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","clockwise","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","str","size","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","mergeWithPrevious","op","reduce","toValue","index2","basePlacement","parseOffset","transformProp","popperStyles","d","priority","check","primary","escapeWithReference","secondary","shiftvariation","shiftOffsets","p","bound","hide","subtractLength","shift","preventOverflow","keepTogether","inner","computeStyle","applyStyle","onLoad","xe","requestAnimationFrame","update","debounce","bind","Popper","Defaults","jquery","modifierOptions","enableEventListeners","destroy","Utils","global","PopperUtils"],"sources":["../src/utils/isBrowser.js","../src/utils/debounce.js","../src/utils/isFunction.js","../src/utils/getStyleComputedProperty.js","../src/utils/getParentNode.js","../src/utils/getScrollParent.js","../src/utils/getReferenceNode.js","../src/utils/isIE.js","../src/utils/getOffsetParent.js","../src/utils/isOffsetContainer.js","../src/utils/getRoot.js","../src/utils/findCommonOffsetParent.js","../src/utils/getScroll.js","../src/utils/includeScroll.js","../src/utils/getBordersSize.js","../src/utils/getWindowSizes.js","../src/utils/getClientRect.js","../src/utils/getBoundingClientRect.js","../src/utils/getOffsetRectRelativeToArbitraryNode.js","../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/utils/isFixed.js","../src/utils/getFixedPositionOffsetParent.js","../src/utils/getBoundaries.js","../src/utils/computeAutoPlacement.js","../src/utils/getReferenceOffsets.js","../src/utils/getOuterSizes.js","../src/utils/getOppositePlacement.js","../src/utils/getPopperOffsets.js","../src/utils/find.js","../src/utils/findIndex.js","../src/utils/runModifiers.js","../src/methods/update.js","../src/utils/isModifierEnabled.js","../src/utils/getSupportedPropertyName.js","../src/methods/destroy.js","../src/utils/getWindow.js","../src/utils/setupEventListeners.js","../src/methods/enableEventListeners.js","../src/utils/removeEventListeners.js","../src/methods/disableEventListeners.js","../src/utils/isNumeric.js","../src/utils/setStyles.js","../src/utils/setAttributes.js","../src/modifiers/applyStyle.js","../src/utils/getRoundedOffsets.js","../src/modifiers/computeStyle.js","../src/utils/isModifierRequired.js","../src/modifiers/arrow.js","../src/utils/getOppositeVariation.js","../src/methods/placements.js","../src/utils/clockwise.js","../src/modifiers/flip.js","../src/modifiers/keepTogether.js","../src/modifiers/offset.js","../src/modifiers/preventOverflow.js","../src/modifiers/shift.js","../src/modifiers/hide.js","../src/modifiers/inner.js","../src/modifiers/index.js","../src/methods/defaults.js","../src/index.js"],"sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"]},"metadata":{},"sourceType":"module"}