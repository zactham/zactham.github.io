{"ast":null,"code":"var _jsxFileName = \"/Users/zac/zactham.github.io/src/components/ImageSlider/ImageSlider.js\";\nimport React, { useState } from 'react';\nimport './ImageSlider.css';\nconst ImageSlider = _ref => {\n  let {\n    images\n  } = _ref;\n  const [current, setCurrent] = useState(0);\n  const handlePrev = () => {\n    setCurrent(prev => prev <= 0 ? images.length - 1 : prev - 1);\n  };\n  const handleNext = () => {\n    setCurrent(prev => prev >= images.length - 1 ? 0 : prev + 1);\n  };\n\n  // Only render the slider if there are images\n  if (!images || images.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"slider-btn slider-btn-prev\",\n    onClick: handlePrev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"<\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: images[current].url,\n    alt: `Slide ${current}: ${images[current].title}`,\n    className: \"slider-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"slider-btn slider-btn-next\",\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \">\"));\n};\n\n// Set default props for images to be an empty array\nImageSlider.defaultProps = {\n  images: []\n};\nexport default ImageSlider;","map":{"version":3,"names":["React","useState","ImageSlider","images","current","setCurrent","handlePrev","prev","length","handleNext","url","title","defaultProps"],"sources":["/Users/zac/zactham.github.io/src/components/ImageSlider/ImageSlider.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ImageSlider.css';\n\nconst ImageSlider = ({ images }) => {\n  const [current, setCurrent] = useState(0);\n\n  const handlePrev = () => {\n    setCurrent(prev => (prev <= 0 ? images.length - 1 : prev - 1));\n  };\n\n  const handleNext = () => {\n    setCurrent(prev => (prev >= images.length - 1 ? 0 : prev + 1));\n  };\n\n  // Only render the slider if there are images\n  if (!images || images.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"slider\">\n      <button className=\"slider-btn slider-btn-prev\" onClick={handlePrev}>&lt;</button>\n      {/* Adjusted to access the url property of the image object */}\n      <img src={images[current].url} alt={`Slide ${current}: ${images[current].title}`} className=\"slider-img\" />\n      <button className=\"slider-btn slider-btn-next\" onClick={handleNext}>&gt;</button>\n    </div>\n  );\n};\n\n// Set default props for images to be an empty array\nImageSlider.defaultProps = {\n  images: []\n};\n\nexport default ImageSlider;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAE1B,MAAMC,WAAW,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMK,UAAU,GAAG,MAAM;IACvBD,UAAU,CAACE,IAAI,IAAKA,IAAI,IAAI,CAAC,GAAGJ,MAAM,CAACK,MAAM,GAAG,CAAC,GAAGD,IAAI,GAAG,CAAE,CAAC;EAChE,CAAC;EAED,MAAME,UAAU,GAAG,MAAM;IACvBJ,UAAU,CAACE,IAAI,IAAKA,IAAI,IAAIJ,MAAM,CAACK,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,IAAI,GAAG,CAAE,CAAC;EAChE,CAAC;;EAED;EACA,IAAI,CAACJ,MAAM,IAAIA,MAAM,CAACK,MAAM,KAAK,CAAC,EAAE;IAClC,OAAO,IAAI;EACb;EAEA,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACrB;IAAQ,SAAS,EAAC,4BAA4B;IAAC,OAAO,EAAEF,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAc,eAEjF;IAAK,GAAG,EAAEH,MAAM,CAACC,OAAO,CAAC,CAACM,GAAI;IAAC,GAAG,EAAG,SAAQN,OAAQ,KAAID,MAAM,CAACC,OAAO,CAAC,CAACO,KAAM,EAAE;IAAC,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAC3G;IAAQ,SAAS,EAAC,4BAA4B;IAAC,OAAO,EAAEF,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAc,CAC7E;AAEV,CAAC;;AAED;AACAP,WAAW,CAACU,YAAY,GAAG;EACzBT,MAAM,EAAE;AACV,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}